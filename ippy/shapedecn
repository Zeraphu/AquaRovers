import cv2
import imutils
import numpy as np
import random as rng

rng.seed(12345)
shape1 = 'unidentified'
cap = cv2.VideoCapture(0)
def detect(c):

    shape = "unidentified"
    peri = cv2.arcLength(c, True)
    approx = cv2.approxPolyDP(c, 0.04 * peri, True)
    if len(approx) == 3:
        shape = "triangle"
 
    elif len(approx) == 4:
        (x, y, w, h) = cv2.boundingRect(approx)
        ar = w/h
        shape = "square" if ar >= 0.95 and ar <= 1.05 else "rectangle"

    #elif len(approx) == 5:
        #shape = "pentagon	
    else:
        shape = "circle"

    return shape

while(1):

    # Take each frame
    _, frame = cap.read()
   
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    (thresh, im_bw) = cv2.threshold(gray, 250, 255, cv2.THRESH_BINARY | cv2.THRESH_OTSU)
    canny = cv2.Canny(gray,100,255)       
    (img,contours,hier)=cv2.findContours(im_bw, cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)

    #Get the moments
    mu = [None]*len(contours)
    for i in range(len(contours)):
        mu[i] = cv2.moments(contours[i])
        cx = int((mu[i]['m10'] / (mu[i]['m00'] + 1e-5)))
        cy = int((mu[i]['m01'] / (mu[i]['m00'] + 1e-5)))

        #for c in contours[i]:
        shape = detect(contours[i])
        if shape1==shape:  #if unidentified, else draw
            continue
        else:
            cv2.drawContours(frame, [contours[i]], -1, (0, 255, 0), 2)
            peri = cv2.arcLength(contours[i],True)
            cv2.putText(frame, shape, (cx,cy), cv2.FONT_HERSHEY_SIMPLEX,0.5, (255, 255, 255), 2)
            #if "circle"==shape:
             #   r = round(peri/(2.00*3.14))
              #  r = (r*2.54/96)
               # r=round(r,2)
               # cv2.putText(frame, str(r)+'cm', (cx,cy), cv2.FONT_HERSHEY_SIMPLEX,0.5, (255, 255, 255), 2)
            #elif "square"==shape:
            #    r= peri/4
             #   r=round(r,2)
             #   cv2.putText(frame, str(r)+'cm', (cx,cy), cv2.FONT_HERSHEY_SIMPLEX,0.5, (255, 255, 255), 2)
           # elif "rectangle"==shape:
            #    fig = cv2.approxPolyDP(contours[i],0.04*peri,True)
             #   (x,y,b,h)=cv2.boundingRect(fig)
              #  b=b*2.54/96
               # h=h*2.54/96
                #b=round(b,2)
                #h=round(h,2)
                #cv2.putText(frame,str(b)+'cm',(cx,cy), cv2.FONT_HERSHEY_SIMPLEX,0.5, (255, 255, 255), 2)
                #cv2.putText(frame,str(h)+'cm',(cx+60,cy), cv2.FONT_HERSHEY_SIMPLEX,0.5, (255, 255, 255), 2)                
	
     
    drawing = np.zeros((canny.shape[0], canny.shape[1], 3), dtype=np.uint8)
    
    for i in range(len(contours)):
        color = (rng.randint(0,256), rng.randint(0,256), rng.randint(0,256))
        cv2.drawContours(drawing, contours, i, color, 2)
        cv2.circle(drawing, (cx,cy), 4, color, -1)

    cv2.imshow('Thresh',im_bw)
    cv2.imshow('Contours', drawing)
    cv2.imshow('Shape', frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cv2.destroyAllWindows()
